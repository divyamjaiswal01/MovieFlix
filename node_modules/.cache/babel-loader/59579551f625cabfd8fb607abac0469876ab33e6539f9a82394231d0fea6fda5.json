{"ast":null,"code":"var _jsxFileName = \"/Users/divyamjaiswal/Desktop/MovieStreaming/src/containers/browse.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-nested-ternary */\nimport React, { useContext, useState, useEffect } from 'react';\nimport Fuse from 'fuse.js';\nimport { FirebaseContext } from '../context/firebase';\nimport { SelectProfileContainer } from './profiles';\nimport { Card, Header, Loading } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../logo.svg';\nimport { FooterContainer } from './footer';\nimport Player from '../components/player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BrowseContainer({\n  slides\n}) {\n  _s();\n  const [category, setCategory] = useState('series');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [profile, setProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [slideRows, setSlideRows] = useState([]);\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  useEffect(() => {\n    setSlideRows(slides[category]);\n  }, [slides, category]);\n  useEffect(() => {\n    const fuse = new Fuse(slideRows, {\n      keys: ['data.description', 'data,title', 'data.genre']\n    });\n    const results = fuse.search(searchTerm).map(({\n      item\n    }) => item);\n    if (slideRows.length > 0 && searchTerm.length > 3 && results.length > 0) {\n      setSlideRows(results);\n    } else {\n      setSlideRows(slides[category]);\n    }\n  }, [searchTerm]);\n  return profile.displayName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading ? /*#__PURE__*/_jsxDEV(Loading, {\n      src: user.photoURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Loading.ReleaseBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Header.Frame, {\n        children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n          children: /*#__PURE__*/_jsxDEV(Header.Logo, {\n            to: ROUTES.HOME,\n            src: logo,\n            alt: \"Netflix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Header.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Header.Search, {\n            searchTerm: searchTerm,\n            setSearchTerm: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Header.Profile, {\n            children: [/*#__PURE__*/_jsxDEV(Header.Picture, {\n              src: user.photoURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Header.Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Header.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Header.Picture, {\n                  src: user.photoURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Header.TextLink, {\n                  children: user.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Header.Group, {\n                children: /*#__PURE__*/_jsxDEV(Header.TextLink, {\n                  onClick: () => firebase.auth().signOut(),\n                  children: \"Sign out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header.Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n//new timestamp 7:53:08, need to work on Player test and overall performance\n_s(BrowseContainer, \"UPYs8C3qZ3h9XB51ADYVieHu3Rg=\");\n_c = BrowseContainer;\nvar _c;\n$RefreshReg$(_c, \"BrowseContainer\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Fuse","FirebaseContext","SelectProfileContainer","Card","Header","Loading","ROUTES","logo","FooterContainer","Player","jsxDEV","_jsxDEV","Fragment","_Fragment","BrowseContainer","slides","_s","category","setCategory","searchTerm","setSearchTerm","profile","setProfile","loading","setLoading","slideRows","setSlideRows","firebase","user","auth","currentUser","setTimeout","displayName","fuse","keys","results","search","map","item","length","children","src","photoURL","fileName","_jsxFileName","lineNumber","columnNumber","ReleaseBody","Frame","Group","Logo","to","HOME","alt","Search","Profile","Picture","Dropdown","TextLink","onClick","signOut","Banner","_c","$RefreshReg$"],"sources":["/Users/divyamjaiswal/Desktop/MovieStreaming/src/containers/browse.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport  React, { useContext, useState, useEffect } from 'react';\nimport Fuse from 'fuse.js';\nimport { FirebaseContext } from '../context/firebase';\nimport { SelectProfileContainer } from './profiles';\nimport { Card, Header, Loading } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../logo.svg';\nimport { FooterContainer } from './footer';\nimport Player from '../components/player';\n\n\n\nexport function BrowseContainer({ slides }) {\n\n    const [category, setCategory] = useState('series');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [profile, setProfile] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [slideRows, setSlideRows] = useState([]);\n\n    const { firebase } = useContext(FirebaseContext);\n    const user = firebase.auth().currentUser || {};\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false);\n        }, 3000);\n    }, [profile.displayName]);\n    \n\n    useEffect(() => {\n        setSlideRows(slides[category]);\n    }, [slides, category]);\n\n    useEffect(() => {\n        const fuse = new Fuse(slideRows, \n            { keys: ['data.description', 'data,title', 'data.genre'], });\n        const results = fuse.search(searchTerm).map(({ item }) => item);\n\n        if(slideRows.length > 0 && searchTerm.length > 3 \n            && results.length > 0 ) {\n            setSlideRows(results);\n        } else {\n            setSlideRows(slides[category]);\n        }\n\n    }, [searchTerm]);\n\n    return profile.displayName ? (\n        <>\n            {loading ? <Loading src={user.photoURL} /> \n                :  <Loading.ReleaseBody />}\n            \n            \n                <Header>\n                <Header.Frame>\n                <Header.Group>\n                    <Header.Logo to={ROUTES.HOME} src={logo} alt=\"Netflix\" />\n                        \n                </Header.Group>\n\n                <Header.Group>\n                    <Header.Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n                    <Header.Profile>\n                        <Header.Picture src={user.photoURL} />\n                        <Header.Dropdown>\n                            <Header.Group>\n                                <Header.Picture src={user.photoURL} />\n                                <Header.TextLink>{user.displayName}</Header.TextLink>\n                            </Header.Group>\n\n                            <Header.Group>\n                                <Header.TextLink onClick={() => firebase.auth().signOut()}>Sign out</Header.TextLink>\n                            </Header.Group>\n                        </Header.Dropdown>\n                    </Header.Profile>\n                </Header.Group>\n            </Header.Frame>\n            <Header.Banner></Header.Banner>\n            </Header>\n        \n\n\n            \n            {/* <Header src=\"joker1\" dontShowOnSmallViewPort>\n            <Header.Frame>\n                <Header.Group>\n                    <Header.Logo to={ROUTES.HOME} src={logo} alt=\"Netflix\" />\n                    <Header.TextLink active={category === 'series' ? \n                        'true' : 'false'} onClick={() => setCategory('series')}>Series\n                    </Header.TextLink>\n                    <Header.TextLink active={category === 'films' ? \n                        'true' : 'false'} onClick={() => setCategory('films')}>Films\n                    </Header.TextLink>\n                </Header.Group>\n\n                <Header.Group>\n                    <Header.Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n                    <Header.Profile>\n                        <Header.Picture src={user.photoURL} />\n                        <Header.Dropdown>\n                            <Header.Group>\n                                <Header.Picture src={user.photoURL} />\n                                <Header.TextLink>{user.displayName}</Header.TextLink>\n                            </Header.Group>\n\n                            <Header.Group>\n                                <Header.TextLink onClick={() => firebase.auth().signOut()}>Sign out</Header.TextLink>\n                            </Header.Group>\n                        </Header.Dropdown>\n                    </Header.Profile>\n                </Header.Group>\n\n            </Header.Frame>\n            <Header.Feature>\n                <Header.FeatureCallOut>Watch Joker Now</Header.FeatureCallOut>\n                <Header.Text>\n                Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham\n                City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a\n                futile attempt to feel like he's part of the world around him.\n                </Header.Text>\n\n                <Header.PlayButton>Play</Header.PlayButton>\n            </Header.Feature>\n            </Header> */}\n\n            {/* <Card.Group>\n                {slideRows.map((slideItem) => (\n                    <Card key={`${category}-${slideItem.title.toLowerCase()}`}>\n                        <Card.Title>{slideItem.title}</Card.Title>\n                        <Card.Entities>\n                            {slideItem.data.map((item) => (\n                                <Card.Item key={item.docId} item={item}>\n                                    <Card.Image src={`/images/${category}/${item.genre}/${item.slug}/small.jpg`}>\n                                    </Card.Image>\n                                    <Card.Meta>\n                                        <Card.SubTitle>{item.title}</Card.SubTitle>\n                                        <Card.Text>{item.description}</Card.Text>\n                                    </Card.Meta>\n                                </Card.Item>\n                            ))}\n                        </Card.Entities>\n\n                        <Card.Feature category={category}>\n                            <Player>\n                                <Player.Button />\n                                <Player.Video src=\"/videos/bunny.mp4\" />\n                            </Player>\n                        </Card.Feature>\n                    </Card>\n                ))}\n            </Card.Group> */}\n            {/* <FooterContainer /> */}\n        </>\n    ) : (\n        <SelectProfileContainer user={user} setProfile={setProfile} />\n    );\n}\n\n//new timestamp 7:53:08, need to work on Player test and overall performance"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}