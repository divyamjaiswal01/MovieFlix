{"ast":null,"code":"var _jsxFileName = \"/Users/divyamjaiswal/netflix-clone-using-react/src/components/row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport \"./row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const requests = await axios.get(fetchUrl);\n      setMovies(requests.data.results);\n      return requests;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","movieTrailer","jsxDEV","_jsxDEV","base_url","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","requests","get","data","results","opts","height","width","playVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","backdrop_path","alt","id","videoId","_c","$RefreshReg$"],"sources":["/Users/divyamjaiswal/netflix-clone-using-react/src/components/row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport \"./row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData(){\n            const requests = await axios.get(fetchUrl);\n            setMovies(requests.data.results);\n            return requests;\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) => {\n        if(trailerUrl) {\n            setTrailerUrl('');\n        } else {\n            movieTrailer(movie?.name || \"\").then(url => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get('v'));\n            })\n            .catch(error => console.log(error));\n        }\n    };\n\n    return (\n        <div className=\"row\" >\n            <h2>{title}</h2>\n\n            <div className=\"row_posters\">\n            \n            {movies.map(movie => (\n                <img\n                    key={movie.id}\n                    onClick={() => handleClick(movie)}\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\n            ))}\n            </div>\n\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n\n        </div>\n    )\n}\n\nexport default Row\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}