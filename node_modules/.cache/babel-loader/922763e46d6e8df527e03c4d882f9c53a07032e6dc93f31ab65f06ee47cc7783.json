{"ast":null,"code":"var _jsxFileName = \"/Users/divyamjaiswal/netflix-clone-using-react/src/components/accordion/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from '../accordion/styles/accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleContext = /*#__PURE__*/createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ...restProps,\n    children: /*#__PURE__*/_jsxDEV(Inner, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_c = Accordion;\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Title, {\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\nAccordion.Frame = function AccordionFrame({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\nAccordion.Item = _s(function AccordionItem({\n  children,\n  ...restProps\n}) {\n  _s();\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    children: /*#__PURE__*/_jsxDEV(Item, {\n      ...restProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}, \"tCX/VzjJ88VBg9+I9/DmKaZ9kqM=\");\nAccordion.Header = _s2(function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  _s2();\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    onClick: () => setToggleShow(toggleShow => !toggleShow),\n    ...restProps,\n    children: [children, toggleShow ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/close-slim.png\",\n      alt: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/icons/add.png\",\n      alt: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}, \"TK/oZdgUDCvLrKWRR9mTHBf6KYY=\");\nAccordion.Body = _s3(function AccordionBody({\n  children,\n  ...restProps\n}) {\n  _s3();\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return toggleShow ? /*#__PURE__*/_jsxDEV(Body, {\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this) : null;\n}, \"3GdtCldLvewOgpnz6EBMvQFgAf4=\");\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["React","useState","useContext","createContext","Container","Frame","Title","Item","Inner","Header","Body","jsxDEV","_jsxDEV","ToggleContext","Accordion","children","restProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","AccordionTitle","AccordionFrame","_s","AccordionItem","toggleShow","setToggleShow","Provider","value","_s2","AccordionHeader","onClick","src","alt","_s3","AccordionBody","$RefreshReg$"],"sources":["/Users/divyamjaiswal/netflix-clone-using-react/src/components/accordion/index.js"],"sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport { Container, Frame, Title, Item, Inner, Header, Body } from '../accordion/styles/accordion';\n\nconst ToggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n    return (\n        <Container { ...restProps}>\n            <Inner>{children}</Inner>\n        </Container>\n    );\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n    return <Title {...restProps}>{children}</Title>;\n};\n\nAccordion.Frame = function AccordionFrame({ children, ...restProps }) {\n    return <Frame {...restProps}>{children}</Frame>;\n};\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n    const [toggleShow, setToggleShow] = useState(false);\n    return (\n        <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\n            <Item {...restProps}>{children}</Item>\n        </ToggleContext.Provider>\n    );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n    const { toggleShow, setToggleShow } = useContext(ToggleContext);\n    \n    return (\n        <Header \n            onClick={() => setToggleShow((toggleShow) => !toggleShow)} {...restProps}>\n            \n            {children}\n            {toggleShow ? (\n                <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\n            ) : (\n                <img src=\"/images/icons/add.png\" alt=\"Open\" />\n            )}\n        </Header>\n    );\n};\n\nAccordion.Body = function AccordionBody({children, ...restProps }) {\n    const { toggleShow } = useContext(ToggleContext);\n\n    return toggleShow ? <Body { ...restProps}>{children}</Body> : null;\n};"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,QAAQ,OAAO;AAClE,SAASC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnG,MAAMC,aAAa,gBAAGV,aAAa,CAAC,CAAC;AAErC,eAAe,SAASW,SAASA,CAAC;EAAEC,QAAQ;EAAE,GAAGC;AAAU,CAAC,EAAE;EAC1D,oBACIJ,OAAA,CAACR,SAAS;IAAA,GAAMY,SAAS;IAAAD,QAAA,eACrBH,OAAA,CAACJ,KAAK;MAAAO,QAAA,EAAEA;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEpB;AAACC,EAAA,GANuBP,SAAS;AAQjCA,SAAS,CAACR,KAAK,GAAG,SAASgB,cAAcA,CAAC;EAAEP,QAAQ;EAAE,GAAGC;AAAU,CAAC,EAAE;EAClE,oBAAOJ,OAAA,CAACN,KAAK;IAAA,GAAKU,SAAS;IAAAD,QAAA,EAAGA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACnD,CAAC;AAEDN,SAAS,CAACT,KAAK,GAAG,SAASkB,cAAcA,CAAC;EAAER,QAAQ;EAAE,GAAGC;AAAU,CAAC,EAAE;EAClE,oBAAOJ,OAAA,CAACP,KAAK;IAAA,GAAKW,SAAS;IAAAD,QAAA,EAAGA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACnD,CAAC;AAEDN,SAAS,CAACP,IAAI,GAAAiB,EAAA,CAAG,SAASC,aAAaA,CAAC;EAAEV,QAAQ;EAAE,GAAGC;AAAU,CAAC,EAAE;EAAAQ,EAAA;EAChE,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACnD,oBACIW,OAAA,CAACC,aAAa,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEH,UAAU;MAAEC;IAAc,CAAE;IAAAZ,QAAA,eACzDH,OAAA,CAACL,IAAI;MAAA,GAAKS,SAAS;MAAAD,QAAA,EAAGA;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEjC,CAAC;AAEDN,SAAS,CAACL,MAAM,GAAAqB,GAAA,CAAG,SAASC,eAAeA,CAAC;EAAEhB,QAAQ;EAAE,GAAGC;AAAU,CAAC,EAAE;EAAAc,GAAA;EACpE,MAAM;IAAEJ,UAAU;IAAEC;EAAc,CAAC,GAAGzB,UAAU,CAACW,aAAa,CAAC;EAE/D,oBACID,OAAA,CAACH,MAAM;IACHuB,OAAO,EAAEA,CAAA,KAAML,aAAa,CAAED,UAAU,IAAK,CAACA,UAAU,CAAE;IAAA,GAAKV,SAAS;IAAAD,QAAA,GAEvEA,QAAQ,EACRW,UAAU,gBACPd,OAAA;MAAKqB,GAAG,EAAC,8BAA8B;MAACC,GAAG,EAAC;IAAO;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEtDR,OAAA;MAAKqB,GAAG,EAAC,uBAAuB;MAACC,GAAG,EAAC;IAAM;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;AAEDN,SAAS,CAACJ,IAAI,GAAAyB,GAAA,CAAG,SAASC,aAAaA,CAAC;EAACrB,QAAQ;EAAE,GAAGC;AAAU,CAAC,EAAE;EAAAmB,GAAA;EAC/D,MAAM;IAAET;EAAW,CAAC,GAAGxB,UAAU,CAACW,aAAa,CAAC;EAEhD,OAAOa,UAAU,gBAAGd,OAAA,CAACF,IAAI;IAAA,GAAMM,SAAS;IAAAD,QAAA,EAAGA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC,GAAG,IAAI;AACtE,CAAC;AAAC,IAAAC,EAAA;AAAAgB,YAAA,CAAAhB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}