{"ast":null,"code":"var _jsxFileName = \"/Users/divyamjaiswal/netflix-clone-using-react/src/containers/profiles.js\";\nimport React from 'react';\nimport { Header, Profiles } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SelectProfileContainer({\n  user,\n  setProfile\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      bg: false,\n      children: /*#__PURE__*/_jsxDEV(Header.Frame, {\n        children: /*#__PURE__*/_jsxDEV(Header.Logo, {\n          to: ROUTES.HOME,\n          src: logo,\n          alt: \"Netflix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Profiles, {\n      children: [/*#__PURE__*/_jsxDEV(Profiles.Title, {\n        children: \"Who is Watching ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Profiles.List, {\n        children: /*#__PURE__*/_jsxDEV(Profiles.User, {\n          onClick: () => setProfile({\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          }),\n          \"data-testid\": \"user-profile\",\n          children: [/*#__PURE__*/_jsxDEV(Profiles.Picture, {\n            src: user.photoURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Profiles.Name, {\n            children: user.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = SelectProfileContainer;\nvar _c;\n$RefreshReg$(_c, \"SelectProfileContainer\");","map":{"version":3,"names":["React","Header","Profiles","ROUTES","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectProfileContainer","user","setProfile","children","bg","Frame","Logo","to","HOME","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Title","List","User","onClick","displayName","photoURL","Picture","Name","_c","$RefreshReg$"],"sources":["/Users/divyamjaiswal/netflix-clone-using-react/src/containers/profiles.js"],"sourcesContent":["import React from 'react';\nimport { Header, Profiles } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../logo.svg';\n\n\nexport function SelectProfileContainer({ user, setProfile }) {\n    return (\n    <> \n        <Header bg={false}>\n            <Header.Frame>\n                <Header.Logo to={ROUTES.HOME} src={logo} alt=\"Netflix\" />\n            </Header.Frame>\n        </Header>\n\n        <Profiles>\n            <Profiles.Title>Who is Watching ?</Profiles.Title>\n            <Profiles.List>\n                <Profiles.User \n                onClick={() => setProfile({ displayName: user.displayName, photoURL: user.photoURL })}\n                data-testid=\"user-profile\"\n                >\n                    <Profiles.Picture src={user.photoURL} />\n                    <Profiles.Name>{user.displayName}</Profiles.Name>\n                </Profiles.User>\n            </Profiles.List>\n        </Profiles>\n    </>\n    );\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAChD,OAAO,KAAKC,MAAM,MAAM,qBAAqB;AAC7C,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/B,OAAO,SAASC,sBAAsBA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,EAAE;EACzD,oBACAL,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA,CAACL,MAAM;MAACY,EAAE,EAAE,KAAM;MAAAD,QAAA,eACdN,OAAA,CAACL,MAAM,CAACa,KAAK;QAAAF,QAAA,eACTN,OAAA,CAACL,MAAM,CAACc,IAAI;UAACC,EAAE,EAAEb,MAAM,CAACc,IAAK;UAACC,GAAG,EAAEd,IAAK;UAACe,GAAG,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAETjB,OAAA,CAACJ,QAAQ;MAAAU,QAAA,gBACLN,OAAA,CAACJ,QAAQ,CAACsB,KAAK;QAAAZ,QAAA,EAAC;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,eAClDjB,OAAA,CAACJ,QAAQ,CAACuB,IAAI;QAAAb,QAAA,eACVN,OAAA,CAACJ,QAAQ,CAACwB,IAAI;UACdC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAAC;YAAEiB,WAAW,EAAElB,IAAI,CAACkB,WAAW;YAAEC,QAAQ,EAAEnB,IAAI,CAACmB;UAAS,CAAC,CAAE;UACtF,eAAY,cAAc;UAAAjB,QAAA,gBAEtBN,OAAA,CAACJ,QAAQ,CAAC4B,OAAO;YAACZ,GAAG,EAAER,IAAI,CAACmB;UAAS;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxCjB,OAAA,CAACJ,QAAQ,CAAC6B,IAAI;YAAAnB,QAAA,EAAEF,IAAI,CAACkB;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA,eACb,CAAC;AAEP;AAACS,EAAA,GAvBevB,sBAAsB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}